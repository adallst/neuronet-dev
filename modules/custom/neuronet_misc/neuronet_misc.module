<?php

/**
 * @file
 * Contains neuronet_misc.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use \Drupal\user\Entity\User;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_help().
 */
function neuronet_misc_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the neuronet_misc module.
    case 'help.page.neuronet_misc':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Adds miscellaneous functionality to the NeuroNet website') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_views_pre_render().
 */
function neuronet_misc_views_pre_render(\Drupal\views\ViewExecutable $view) {
	// Remove old positions
  if($view->id() == 'alumni'){
  	$indexes_to_remove = array();
    foreach($view->result as $value){
    	// it is VERY annoying to get entity reference values in Drupal 8
      $nid = $value->_entity->get('field_profile')->first()->get('entity')->getTarget()->getValue()->get('nid')->value;
      $start_date = $value->_entity->get('field_start_date')->value;
      $index = 0;
      foreach($view->result as $value2){
      	$sub_nid = $value2->_entity->get('field_profile')->first()->get('entity')->getTarget()->getValue()->get('nid')->value;
      	if ($nid == $sub_nid) {		
      		$start_date = $value->_entity->get('field_start_date')->value;
      		$start_date2 = $value2->_entity->get('field_start_date')->value;
      		if (date($start_date2) < date($start_date)) {
      			$indexes_to_remove[] = $index;
      		}
      	}
      	$index++;
      }
    }
    foreach ($indexes_to_remove as $index){
    	unset($view->result[$index]);
    }
  }
}

function neuronet_misc_preprocess_page(&$variables /*, RouteMatchInterface $route_match*/){  
   $current_path = \Drupal::request()->getRequestUri();
   $path_args = explode('/', $current_path);
   // redirect user page to profile
   if ($path_args[1] == 'user' && is_numeric($path_args[2]) && (!isset($path_args[3]) || is_null($path_args[3]))) {
    $user = User::load($path_args[2]);
    if(is_object($user)) {
      $connection = \Drupal::database();
      $query = $connection->query("SELECT field_profile_target_id FROM {user__field_profile} WHERE entity_id = :entity_id", [':entity_id' => $path_args[2]]);
      $result = $query->fetchAll();
      if (!empty($result)) {
        $nid = $result[0]->field_profile_target_id;
        $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$nid);
        $response = new RedirectResponse($alias);
        $response->send();
      }
    }
   } 
   if ($path_args[1] == 'user' && is_numeric($path_args[2]) && $path_args[3] == 'edit') {
    $user = User::load($path_args[2]);
    if(is_object($user)) {
      $connection = \Drupal::database();
      $query = $connection->query("SELECT field_profile_target_id FROM {user__field_profile} WHERE entity_id = :entity_id", [':entity_id' => $path_args[2]]);
      $result = $query->fetchAll();
      if (!empty($result)) {
        $nid = $result[0]->field_profile_target_id;
        $response = new RedirectResponse('/node/' . $nid . '/account');
        $response->send();
      }
    }
   }    
}